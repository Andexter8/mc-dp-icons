{
  "name": "mc-dp-icons",
  "displayName": "Datapack Icons",
  "description": "A minimialistic, minecraft-style icon theme, designed specifically for datapack devs.",
  "version": "2.0.10",
  "publisher": "SuperAnt",
  "author": {
    "name": "SuperAnt_"
  },
  "icon": "images/logo.png",
  "galleryBanner": {
    "color": "#313338",
    "theme": "dark"
  },
  "license": "GNU AFFERO GENERAL PUBLIC LICENSE",
  "engines": {
    "vscode": "^1.5.1"
  },
  "keywords": [
    "minecraft",
    "datapack",
    "icons",
    "theme",
    "mc",
    "dp",
    "command",
    "block",
    "mcfunction",
    "mcf"
  ],
  "categories": [
    "Themes",
    "Visualization"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/SuperAnt220/mc-dp-icons"
  },
  "homepage": "https://github.com/SuperAnt220/mc-dp-icons",
  "activationEvents": [
    "onStartup",
    "onWorkspaceFolderOpened",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "browser": "./out/extension.js",
  "contributes": {
    "iconThemes": [
      {
        "id": "mc-dp-icons",
        "label": "Datapack Icons Theme",
        "path": "./fileicons/mc-dp-icon-theme.json",
        "_watch": true
      }
    ],
    "configuration": {
      "type": "object",
      "properties": {
        "mc-dp-icons.enableNamespaceIcons" : {
          "type": "boolean",
          "title": "Change namespace's icon to an ender chest.",
          "default":true,
          "description": "If enabled, namespace folders (folders directly within \"data\" and \"assets\") will change their icons to ender chests."
        },
        "mc-dp-icons.enablePackMcmetaCheck": {
          "type": "boolean",
          "title": "Enable pack.mcmeta check",
          "default": true,
          "description": "If enabled, the extension will check pack.mcmeta in the workspace to set the theme to dp icons. If there is no pack.mcmeta in the workspace,icon theme will change to default one used.\nThis check happens every time on extension startup, on changing workspace folder, on renaming, creating and deleting files."
        },
        "mc-dp-icons.setDefaultIconTheme": {
          "type": "string",
          "title": "Set what icon theme will be set if pack.mcmeta check fails",
          "default": "",
          "description": "This works only if \"Enable pack.mcmeta check\" is enabled.\nPut an id of an icon theme you want to be set when there is no pack.mcmeta in the workspace.\nIf blank, the extension will remember the icon theme you launched the workspace with."
        },
        "mc-dp-icons.enableLoadTickAutoChange": {
          "type": "boolean",
          "title": "Will change icons for tick & load functions dynamically",
          "default": true,
          "description": "If enabled, load and tick functions will change their icons to repeating and chain command block accordingly, based on values provided in tick.json and load.json files found in the workspace.\nIf not enabled, load and tick icons will be set by their names, hardcoded in the icon theme."
        },
        "mc-dp-icons.functionNamesForTick": {
          "title": "Tick function names",
          "type": "string",
          "default": "",
          "description": "ONLY WORKS WHEN DYNAMIC TICK & LOAD ICONS ARE OFF! Whatever file names you put here, will have their icon changed to repeating command block. Make sure to separate names with comma, e.g. loop, tick, main, test"
        },
        "mc-dp-icons.functionNamesForLoad": {
          "title": "Load function names",
          "type": "string",
          "default": "",
          "description": "ONLY WORKS WHEN DYNAMIC TICK & LOAD ICONS ARE OFF! Whatever file names you put here, will have their icon changed to repeating command block. Make sure to separate names with comma, e.g. loop, tick, main, test"
        }
      }
    },
    "commands": [
      {
        "title": "Datapack Icons: Open extension settings",
        "command": "mc-dp-icons.DpIconsOpenSettings"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.5.1",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/test-web": "^0.0.49",
    "eslint": "^8.54.0",
    "typescript": "^5.3.2"
  }
}
